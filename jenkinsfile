// Jenkinsfile
// This file defines the CI/CD pipeline for deploying a static website to Google Cloud Storage.
// A Cloud Function is used to generate the site, and a Cloud Scheduler cron job triggers it.

pipeline {
    agent any

    // SCM polling to trigger a new build every 5 minutes if there's a change
    triggers {
        pollSCM('H/5 * * * *')
    }

    environment {
        // Define environment variables for the deployment
        PROJECT_ID = 'textonlyportalwithcache'
        GCS_BUCKET_NAME = 'schale-text-only-portal-cache' // The bucket for your static site
        FUNCTION_NAME = 'text-only-portal-generator' // The new function name
        RUNTIME = 'python39' // Update this to a newer Python version if you wish
        REGION = 'asia-southeast2'
        CRON_JOB_NAME = 'text-only-portal-cron'
        SERVICE_ACCOUNT_NAME = 'jenkins-butler'
        EMAIL_RECIPIENTS = 'ashlovedawn@gmail.com'
    }

    stages {
        stage('Clean and Checkout') {
            steps {
                cleanWs()
                checkout scm
            }
        }

        stage('Deploy Generator Cloud Function') {
            steps {
                script {
                    echo 'Deploying the static site generator Cloud Function...'
                    withCredentials([file(credentialsId: 'jenkins-butler', variable: 'GCP_KEY_FILE')]) {
                        // Activate the service account
                        bat "gcloud auth activate-service-account --key-file=%GCP_KEY_FILE%"
                        
                        // Deploy the Cloud Function with Pub/Sub trigger
                        bat """
                            gcloud functions deploy %FUNCTION_NAME% \\
                            --project=%PROJECT_ID% \\
                            --runtime=%RUNTIME% \\
                            --region=%REGION% \\
                            --source=. \\
                            --entry-point=update_static_site \\
                            --trigger-topic=generate-portal-trigger \\
                            --service-account=%SERVICE_ACCOUNT_NAME%@%PROJECT_ID%.iam.gserviceaccount.com \\
                            --set-env-vars=GCS_BUCKET_NAME=%GCS_BUCKET_NAME% \\
                            --timeout=300s
                        """
                    }
                }
            }
        }
        
        stage('Configure Cloud Scheduler Cron Job') {
            steps {
                script {
                    echo 'Setting up Cloud Scheduler cron job...'
                    withCredentials([file(credentialsId: 'jenkins-butler', variable: 'GCP_KEY_FILE')]) {
                        // The Pub/Sub topic created by the Cloud Function deployment
                        def pubsub_topic = "projects/${env.PROJECT_ID}/topics/generate-portal-trigger"
                        
                        // Command to create or update the cron job
                        bat """
                            gcloud scheduler jobs create pubsub %CRON_JOB_NAME% \\
                            --project=%PROJECT_ID% \\
                            --schedule="*/10 * * * *" \\
                            --topic=%pubsub_topic% \\
                            --message-body="{\\"action\\": \\"update_cache\\"}" || \\
                            gcloud scheduler jobs update pubsub %CRON_JOB_NAME% \\
                            --project=%PROJECT_ID% \\
                            --schedule="*/10 * * * *" \\
                            --topic=%pubsub_topic% \\
                            --message-body="{\\"action\\": \\"update_cache\\"}"
                        """
                    }
                }
            }
        }

        stage('Configure GCS Static Website') {
            steps {
                script {
                    echo 'Configuring GCS bucket for static website hosting...'
                    withCredentials([file(credentialsId: 'jenkins-butler', variable: 'GCP_KEY_FILE')]) {
                        // Set the website configuration for the bucket
                        bat """
                            gcloud storage buckets update gs://%GCS_BUCKET_NAME% \\
                            --project=%PROJECT_ID% \\
                            --web-main-page-suffix=index.html
                        """
                        
                        // Grant public read access to the bucket
                        bat """
                            gcloud storage buckets add-iam-policy-binding gs://%GCS_BUCKET_NAME% \\
                            --project=%PROJECT_ID% \\
                            --member=allUsers \\
                            --role=roles/storage.objectViewer
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo "✅ Build succeeded. Static site deployment is complete."
        }
        failure {
            echo "❌ Build failed. Check the logs for errors."
        }
        always {
            mail to: "${env.EMAIL_RECIPIENTS}",
                 subject: "Build ${currentBuild.currentResult}: Job ${env.JOB_NAME} [#${env.BUILD_NUMBER}]",
                 body: "See details at: ${env.BUILD_URL}"
        }
    }
}
